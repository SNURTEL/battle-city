<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.50.0 (0)
 -->
<!-- Title: BotController Pages: 1 -->
<svg width="201pt" height="831pt"
 viewBox="0.00 0.00 201.00 831.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 827)">
<title>BotController</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-607.5 193,-607.5 193,-0.5 0,-0.5"/>
<text text-anchor="middle" x="96.5" y="-595.5" font-family="Helvetica,sans-Serif" font-size="10.00">BotController</text>
<polyline fill="none" stroke="black" points="0,-588.5 193,-588.5 "/>
<text text-anchor="start" x="8" y="-576.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::vector&lt; std::pair</text>
<text text-anchor="start" x="8" y="-565.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; unsigned int, unsigned</text>
<text text-anchor="start" x="8" y="-554.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int &gt; &gt; spawnpoints_</text>
<text text-anchor="start" x="8" y="-543.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::queue&lt; Tank::TankType</text>
<text text-anchor="start" x="8" y="-532.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; types_</text>
<text text-anchor="start" x="8" y="-521.5" font-family="Helvetica,sans-Serif" font-size="10.00"># unsigned int maxSpawnCooldown</text>
<text text-anchor="start" x="8" y="-510.5" font-family="Helvetica,sans-Serif" font-size="10.00"># unsigned int spawnCooldown</text>
<text text-anchor="start" x="8" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00"># unsigned int maxRegistered</text>
<text text-anchor="start" x="8" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00">Bots_</text>
<text text-anchor="start" x="8" y="-477.5" font-family="Helvetica,sans-Serif" font-size="10.00"># unsigned int registeredBots_</text>
<text text-anchor="start" x="8" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool counting</text>
<text text-anchor="start" x="8" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EventQueue&lt; Event &gt;</text>
<text text-anchor="start" x="8" y="-444.5" font-family="Helvetica,sans-Serif" font-size="10.00"> * eventQueue_</text>
<text text-anchor="start" x="8" y="-433.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static std::unique</text>
<text text-anchor="start" x="8" y="-422.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; BotController</text>
<text text-anchor="start" x="8" y="-411.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; self_</text>
<polyline fill="none" stroke="black" points="0,-404.5 193,-404.5 "/>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BotController()=delete</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BotController &amp; operator</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const BotController &amp;other)</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">=delete</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void makeBotDecision</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::shared_ptr</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Bot &gt; &amp;bot)</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void registerBot()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void deregisterBot()</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void deregisterAllBots()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ unsigned int getRegistered</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">BotsCount() const</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void notify(SimplePublisher</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pub) override</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setSpawnpoints</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::vector&lt;</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::pair&lt; unsigned</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int, unsigned int &gt;&gt;</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;spawnpoints)</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setTypes(const</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::queue&lt; Tank::TankType</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp;types)</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setCounting(bool</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> counting)</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void zeroCooldown()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ unsigned int getRemaining</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">BotsCount()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static BotController</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> * instance()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void initialize</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">(unsigned int maxRegisteredBots,</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> unsigned int spawnCooldown)</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"># BotController(unsigned</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int n_maxRegisteredBots,</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> unsigned int n_spawnCooldown)</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void requestSpawnBot()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_simple_subscriber.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-644.5 0,-822.5 193,-822.5 193,-644.5 0,-644.5"/>
<text text-anchor="middle" x="96.5" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">SimpleSubscriber</text>
<polyline fill="none" stroke="black" points="0,-803.5 193,-803.5 "/>
<text text-anchor="start" x="8" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::vector&lt; SimplePublisher</text>
<text text-anchor="start" x="8" y="-780.5" font-family="Helvetica,sans-Serif" font-size="10.00"> * &gt; subscribedSubjects_</text>
<polyline fill="none" stroke="black" points="0,-773.5 193,-773.5 "/>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SimpleSubscriber()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void subscribe(SimplePublisher</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pub)</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void unsubscribe(SimplePublisher</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pub)</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void removeDeletedSubject</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">(SimplePublisher *pub)</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void notify</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">(SimplePublisher *pub)=0</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SimpleSubscriber()</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">=default</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M96.5,-634.19C96.5,-625.63 96.5,-616.72 96.5,-607.55"/>
<polygon fill="none" stroke="midnightblue" points="93,-634.44 96.5,-644.44 100,-634.44 93,-634.44"/>
</g>
</g>
</svg>
