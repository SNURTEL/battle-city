<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.50.0 (0)
 -->
<!-- Title: Window Pages: 1 -->
<svg width="192pt" height="688pt"
 viewBox="0.00 0.00 192.00 688.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 684)">
<title>Window</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Contains main SFML functions.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-464.5 184,-464.5 184,-0.5 0,-0.5"/>
<text text-anchor="middle" x="92" y="-452.5" font-family="Helvetica,sans-Serif" font-size="10.00">Window</text>
<polyline fill="none" stroke="black" points="0,-445.5 184,-445.5 "/>
<text text-anchor="start" x="8" y="-433.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::unique_ptr&lt; sf</text>
<text text-anchor="start" x="8" y="-422.5" font-family="Helvetica,sans-Serif" font-size="10.00">::RenderWindow &gt; window</text>
<text text-anchor="start" x="8" y="-411.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GameStateGraphic gameState</text>
<text text-anchor="start" x="8" y="-400.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::unordered_map</text>
<text text-anchor="start" x="8" y="-389.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; GameStateGraphic,</text>
<text text-anchor="start" x="8" y="-378.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::shared_ptr&lt; AbstractWindow</text>
<text text-anchor="start" x="8" y="-367.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &gt; children_map</text>
<text text-anchor="start" x="8" y="-356.5" font-family="Helvetica,sans-Serif" font-size="10.00"># sf::VideoMode videoMode</text>
<text text-anchor="start" x="8" y="-345.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ActiveStatePointers</text>
<text text-anchor="start" x="8" y="-334.5" font-family="Helvetica,sans-Serif" font-size="10.00"> activeStatePointers</text>
<text text-anchor="start" x="8" y="-323.5" font-family="Helvetica,sans-Serif" font-size="10.00"># StaticStatePointers</text>
<text text-anchor="start" x="8" y="-312.5" font-family="Helvetica,sans-Serif" font-size="10.00"> staticStatesPointers</text>
<polyline fill="none" stroke="black" points="0,-305.5 184,-305.5 "/>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Window()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void selectgameState</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">(GameState *gmaeState)</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void initiateActiveState</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">Pointers()</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void initateStaticStatePointers()</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void fetchMenuStatePointers</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int selected)</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void render</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">() override</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void addEntity(std</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Entity &gt; e)</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void removeEntity(std</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Entity &gt; e)</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void loadLevel(Grid</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *grid, int levelNumber,</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::pair&lt; uint, uint</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; eaglePos)</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void loadStats(int</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> playerLives, int points)</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void changeMenuPos</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">(uint menuPos)</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string checkEntityType</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; Entity &gt; e)</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void gameWon()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void conscructComposit()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool instanceOf(T *ptr)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="$class_abstract_window.html" xlink:title="Contains main SFML functions.">
<polygon fill="none" stroke="black" points="8.5,-501.5 8.5,-679.5 175.5,-679.5 175.5,-501.5 8.5,-501.5"/>
<text text-anchor="middle" x="92" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">AbstractWindow</text>
<polyline fill="none" stroke="black" points="8.5,-660.5 175.5,-660.5 "/>
<text text-anchor="start" x="16.5" y="-648.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const uint WINDOW_HEIGHT</text>
<text text-anchor="start" x="16.5" y="-637.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const uint WINDOW_WIDTH</text>
<text text-anchor="start" x="16.5" y="-626.5" font-family="Helvetica,sans-Serif" font-size="10.00"># WindowView windowView</text>
<text text-anchor="start" x="16.5" y="-615.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::vector&lt; std::shared</text>
<text text-anchor="start" x="16.5" y="-604.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; AbstractWindow &gt;</text>
<text text-anchor="start" x="16.5" y="-593.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; children</text>
<polyline fill="none" stroke="black" points="8.5,-586.5 175.5,-586.5 "/>
<text text-anchor="start" x="16.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ sf::RenderWindow *</text>
<text text-anchor="start" x="16.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getWindow()</text>
<text text-anchor="start" x="16.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void render()=0</text>
<text text-anchor="start" x="16.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AbstractWindow()</text>
<text text-anchor="start" x="16.5" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AbstractWindow(const</text>
<text text-anchor="start" x="16.5" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00"> WindowView &amp;windowView)</text>
<text text-anchor="start" x="16.5" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~AbstractWindow()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M92,-491.24C92,-482.71 92,-473.86 92,-464.81"/>
<polygon fill="none" stroke="midnightblue" points="88.5,-491.5 92,-501.5 95.5,-491.5 88.5,-491.5"/>
</g>
</g>
</svg>
