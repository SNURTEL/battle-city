<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.50.0 (0)
 -->
<!-- Title: TanksGraphic Pages: 1 -->
<svg width="176pt" height="644pt"
 viewBox="0.00 0.00 176.00 644.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 640)">
<title>TanksGraphic</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Class responsible for tanks updates and render.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-420.5 168,-420.5 168,-0.5 0,-0.5"/>
<text text-anchor="middle" x="84" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00">TanksGraphic</text>
<polyline fill="none" stroke="black" points="0,-401.5 168,-401.5 "/>
<text text-anchor="start" x="8" y="-389.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::shared_ptr&lt; std</text>
<text text-anchor="start" x="8" y="-378.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector&lt; std::shared</text>
<text text-anchor="start" x="8" y="-367.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Tank &gt; &gt; &gt; tanks</text>
<text text-anchor="start" x="8" y="-356.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::unordered_map</text>
<text text-anchor="start" x="8" y="-345.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Tank::TankType, sf</text>
<text text-anchor="start" x="8" y="-334.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Texture &gt; textureMap</text>
<text text-anchor="start" x="8" y="-323.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::unordered_map</text>
<text text-anchor="start" x="8" y="-312.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Tank::TankType, std</text>
<text text-anchor="start" x="8" y="-301.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &gt; pathMap</text>
<text text-anchor="start" x="8" y="-290.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::shared_ptr&lt; std</text>
<text text-anchor="start" x="8" y="-279.5" font-family="Helvetica,sans-Serif" font-size="10.00">::queue&lt; sf::Sprite &gt;</text>
<text text-anchor="start" x="8" y="-268.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; specialQueue</text>
<text text-anchor="start" x="8" y="-257.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::vector&lt; RenderObject</text>
<text text-anchor="start" x="8" y="-246.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; renderTanks</text>
<polyline fill="none" stroke="black" points="0,-239.5 168,-239.5 "/>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void render</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">() override</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::vector&lt; std::shared</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Tank &gt; &gt; * getTanks</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::vector&lt; RenderObject</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; getRenderTanks()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ TanksGraphic(const</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> WindowView &amp;windowView,</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::shared_ptr&lt; std::</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">vector&lt; std::shared_ptr</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Tank &gt;&gt;&gt; tanks, std::shared</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; std::queue&lt; sf::Sprite</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;&gt; specialQueue)</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void setTankRotation</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">(sf::Sprite &amp;sprite,</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float angle)</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void makeRenderTanks()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void loadTextures()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float getAngle(Direction</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> direction) const</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="$class_abstract_window.html" xlink:title="Contains main SFML functions.">
<polygon fill="none" stroke="black" points="0.5,-457.5 0.5,-635.5 167.5,-635.5 167.5,-457.5 0.5,-457.5"/>
<text text-anchor="middle" x="84" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">AbstractWindow</text>
<polyline fill="none" stroke="black" points="0.5,-616.5 167.5,-616.5 "/>
<text text-anchor="start" x="8.5" y="-604.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const uint WINDOW_HEIGHT</text>
<text text-anchor="start" x="8.5" y="-593.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const uint WINDOW_WIDTH</text>
<text text-anchor="start" x="8.5" y="-582.5" font-family="Helvetica,sans-Serif" font-size="10.00"># WindowView windowView</text>
<text text-anchor="start" x="8.5" y="-571.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::vector&lt; std::shared</text>
<text text-anchor="start" x="8.5" y="-560.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; AbstractWindow &gt;</text>
<text text-anchor="start" x="8.5" y="-549.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; children</text>
<polyline fill="none" stroke="black" points="0.5,-542.5 167.5,-542.5 "/>
<text text-anchor="start" x="8.5" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ sf::RenderWindow *</text>
<text text-anchor="start" x="8.5" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getWindow()</text>
<text text-anchor="start" x="8.5" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void render()=0</text>
<text text-anchor="start" x="8.5" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AbstractWindow()</text>
<text text-anchor="start" x="8.5" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AbstractWindow(const</text>
<text text-anchor="start" x="8.5" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"> WindowView &amp;windowView)</text>
<text text-anchor="start" x="8.5" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~AbstractWindow()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M84,-447.29C84,-438.63 84,-429.68 84,-420.54"/>
<polygon fill="none" stroke="midnightblue" points="80.5,-447.31 84,-457.31 87.5,-447.31 80.5,-447.31"/>
</g>
</g>
</svg>
